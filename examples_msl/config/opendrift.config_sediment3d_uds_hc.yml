# Template for config file
# reproduce run found in example_benchmark_regular
# 
# pycallable:     schism.wrapper.SCHISMHC
# 
# ======================================================================
imp:  test_SedimentDrift3D # implementation name
model: SedimentDrift3D
rootdir: 'C:\github\opendrift\examples_msl'# where the simulation will be run
# extra_model_args: {logfile: 'multireaders.log'}# these will be passed as **kwargs in __init__() function
# e.g. extra_model_args: {logfile: 'test.log','weathering_model','noaa'}
# ======================================================================
# release
nb_parts: 1000
start_time: '01-01-2005 00:00'
end_time:   '01-01-2005 00:00'
# duration_hours: 24.0 #= int(self.durationhours.get())*3600/time_step
end_time_run: '08-01-2005 00:00' #not used if duration is specified
time_step_sec: 900 #= 900  # 15 minutes
time_step_sec_output: 1800 #= timedelta(minutes=30)
# release along a line that goes across the different ocean readers
position: {lon: 174.0 , lat: -40.33 , radius: 10.,z: -2.0} # z can be 'seafloor' or 'seafloor+2', or scalar -50.0
extra_seed_args: {terminal_velocity: -0.001, wind_drift_factor: 0.02} #high in purpose to make it go across different datasets
# these will be passed as **kwargs in seed_elements() function
# frame
model_frame:    {llcrnrlon: 168.0199, llcrnrlat: -42.8449 , urcrnrlon: 177.4601 , urcrnrlat: -37.9051}
basemap_resolution: 'h' # resolution can be c (crude, the default), l (low), i (intermediate), h (high), f (full)
# ======================================================================
# readers
# specified using {reader_type: reader_filename, ...} reader_type can be any found in 'from opendrift.readers'  
#
# ****ORDER OF READERS MATTERS FOR PRIORITY ****
# ie. opendrift will firs try to get data from ocean0, then ocean1, ocean2
#
readers:
    ocean0: # specify one or several reader_type and filenames - order matters and will govern priority
        reader_type: [reader_netCDF_MetOcean] #reader_type can be any found in 'from opendrift.readers'  
        # filename: ['F:/metocean/R&D_OpenDrift/benchmark_runs/cnz20040101_00z_surf.nc'] # can be many files
        udshost: 'http://uds1.rag.metocean.co.nz:9191/uds' # data needs to be downloaded from UDS
        dset:    ['roms_cnz_surf']
        vars:    ['um','vm','dep']
        datatype: 'hc'
        timestep: 1.0
        boundary:    [173.0,175.0,-42.0,-39.0] # optional - if not input use a squar of 2x2 deg.
        options: {use_log_profile: True, z0: 0.001} # will be passed as kwargs to reader's __init__()
    meteo:
        reader_type: [reader_netCDF_MetOcean] #reader_type can be any found in 'from opendrift.readers'  
        # filename: ['F:/metocean/R&D_OpenDrift/benchmark_runs/cnz20040101_00z_surf.nc'] # can be many files
        udshost: 'http://uds1.rag.metocean.co.nz:9191/uds' # data needs to be downloaded from UDS
        dset:    ['nzra1_nz']
        vars:    ['ugrd10m','vgrd10m']
        datatype: 'hc'
        timestep: 3.0
        boundary:  [173.0,176.5,-42,-39] # optional - if not input use a squar of 2x2 deg.
        options: {} # will be passed as kwargs to reader's __init__()

fallback_values: {ocean_vertical_diffusivity: 0.0001} # used to define constant/fall back values
# ======================================================================
run_backwards: False
stop_on_error: False
outfile: output_uds.nc #self.outputdir + '/opendrift_'  # could be defined by default from implemtation name ?
extra_output_args: {} # additional outputs arguments as specified in run()
# ======================================================================
# configuration : base inherited from basemodel + model-specific configs 
# e.g.
# if nothing specfied, default config is used 
config:
    general:
        coastline_action: 'stranding' # option('none', 'stranding', 'previous', default='stranding')
    seed:
        ocean_only: True #boolean(default=True)
    drift:
        scheme: 'runge-kutta4'
        current_uncertainty: 0.005
        wind_uncertainty: 2.0
    processes:
        turbulentmixing: True   # IMPORTANT : This must be set to True, otherwise no settling included
        verticaladvection: False
# post-processing
post_process:
    show_anim:  False
    save_anim:  False
    show_plot:  True
    save_plot:  False
    show_oil_budget: False
    save_oil_budget: False
    # more to come