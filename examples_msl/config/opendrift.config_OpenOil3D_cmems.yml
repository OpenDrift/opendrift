# Template for config file
# reproduce run found in example_benchmark_regular
# 
# pycallable:     schism.wrapper.SCHISMHC
# 
# ======================================================================
imp:  test_OpenOil3D_CMEMS # implementation name
model: OpenOil3D
rootdir: 'C:\github\opendrift\examples_msl'# where the simulation will be run
# extra_model_args: {logfile: 'test_OpenOil3D_CMEMS.log' , weathering_model: 'noaa'} #, 
# e.g. extra_model_args: {logfile: 'test.log','weathering_model','noaa'}
# ======================================================================
# release
nb_parts: 1000
start_time: '01-01-2017 00:00' # day-month-year hour:min
end_time:   '01-01-2017 00:00'
# duration_hours: 24.0 #= int(self.durationhours.get())*3600/time_step
end_time_run: '05-01-2017 00:00' #not used if duration is specified
time_step_sec: 900 #= 900  # 15 minutes
time_step_sec_output: 1800 #= timedelta(minutes=30)
position: {lon: 172.0,lat: -40.0, radius: 10. , z: 'seafloor+5' } # z can be 'seafloor' or 'seafloor+2' , or scalar (negative down)

# end_position: {elon: 174.1656,elat: -40.3346, eradius: 10.,ez: 0.0} #  optional, final lon,lat,z
extra_seed_args: {oiltype: 'ALGERIAN CONDENSATE', wind_drift_factor: 0.04, m3_per_hour: 1000.0} # these will be passed as **kwargs in seed_elements() function
# e.g. extra_seed_args: {objectType: 26} # 26 = Life-raft, no ballast
# frame
model_frame:    {llcrnrlon: 170.0, llcrnrlat: -42.0 , urcrnrlon: 176.0 , urcrnrlat: -38.0}
basemap_resolution: 'h' # resolution can be c (crude, the default), l (low), i (intermediate), h (high), f (full)
# ======================================================================
# readers
readers:
    ocean0: # specify one or several reader_type and filenames - order matters and will govern priority
        reader_type: [reader_netCDF_CF_generic] #reader_type can be any found in 'from opendrift.readers'  
        cmems_download: True # data needs to be downloaded from UDS
        dset:    ['GLOBAL_ANALYSIS_FORECAST_PHY_001_024-TDS']
        vars:    ['utotal','vtotal']
        datatype: 'hc'
        timestep: 1.0
        boundary:    [170.0,176.0,-42.0,-38.0] # optional - if not input use a squar of 2x2 deg.
        # options: {use_log_profile: True, z0: 0.001} # will be passed as kwargs to reader's __init__()
    wave: # specify one or several reader_type and filenames - order matters and will govern priority
        reader_type: [reader_netCDF_CF_generic] #reader_type can be any found in 'from opendrift.readers'  
        cmems_download: True # data needs to be downloaded from UDS
        dset:    ['GLOBAL_ANALYSIS_FORECAST_WAV_001_027-TDS']
        vars:    ['VHM0','VTPK','VTM10','VPED','VMDR','VSDX ','VSDY']
        datatype: 'hc'
        timestep: 1.0
        boundary:    [170.0,176.0,-42.0,-38.0] # optional - if not input use a squar of 2x2 deg.
        # options: {use_log_profile: True, z0: 0.001} # will be passed as kwargs to reader's __init__()
    wind: # specify one or several reader_type and filenames - order matters and will govern priority
        reader_type: [reader_netCDF_CF_generic] #reader_type can be any found in 'from opendrift.readers'  
        cmems_download: True # data needs to be downloaded from UDS
        dset:    ['WIND_GLO_WIND_L4_REP_OBSERVATIONS_012_006-TDS'] #WIND_GLO_WIND_L4_NRT_OBSERVATIONS_012_004
        vars:    ['eastward_wind','northward_wind']
        datatype: 'hc'
        timestep: 1.0
        boundary:    [170.0,176.0,-42.0,-38.0] # optional - if not input use a squar of 2x2 deg.
        # options: {use_log_profile: True, z0: 0.001} # will be passed as kwargs to reader's __init__()
    bathy: # workaround to access depth information even when using CMEMS data - quey timeseries of gridded depth
        reader_type: [reader_netCDF_MetOcean] #reader_type can be any found in 'from opendrift.readers'  
        udshost: http://uds1.rag.metocean.co.nz:9191/uds # data needs to be downloaded from UDS
        dset:    ['roms_nz_surf']
        vars:    ['dep']
        datatype: 'hc'
        timestep: 1.0
        boundary:    [170.0,176.0,-42.0,-38.0] # optional - if not input use a squar of 2x2 deg.
        # options: { always_valid: True } # will be passed as kwargs to reader's __init__()

fallback_values: {ocean_vertical_diffusivity: 0.0001, x_wind: 0.0, y_wind: 0.0} # used to define constant/fall back values

# ======================================================================
run_backwards: False
stop_on_error: False
outfile: output_cmems_openoil3d.nc #self.outputdir + '/opendrift_'  # could be defined by default from implemtation name ?
extra_output_args: {} # additional outputs arguments as specified in run()
# ======================================================================
# if nothing specfied, default config is used 
config:
    general:
        coastline_action: 'stranding' # option('none', 'stranding', 'previous', default='stranding')
    seed:
        ocean_only: True #boolean(default=True)
        # oiltype: 'GULLFAKS, EXXON' - can be set here instead of extra_seed_args 'ARABIAN MEDIUM, API' 
    drift:
        scheme: 'runge-kutta4' #option('euler', 'runge-kutta4', 'runge-kutta4', default='euler')
        current_uncertainty: 0.025
        wind_uncertainty: 2.0
        # max_age_seconds: float(min=0, default=None)
        stokes_drift: True #boolean(default=True)
        # wind_drift_depth: 3.0
        # current_uncertainty: float(min=0, max=5, default=0)
        # current_uncertainty_uniform: float(min=0, max=5, default=0)
        # wind_uncertainty: float(min=0, max=5, default=0)
        # relative_wind: boolean(default=False)
        # lift_to_seafloor: boolean(default=True)
        # truncate_ocean_model_below_m: float(min=0, max=10000, default=None)
        # deactivate_north_of: float(min=-90, max=90, default=None)
        # deactivate_south_of: float(min=-90, max=90, default=None)
        # deactivate_east_of: float(min=-360, max=360, default=None)
        # deactivate_west_of: float(min=-360, max=360, default=None)
        # use_tabularised_stokes_drift: boolean(default=False)
        # tabularised_stokes_drift_fetch: option(5000, 25000, 50000, default=25000)
    processes:
        turbulentmixing: True
        verticaladvection: False
        dispersion: True
        evaporation: True
        emulsification: True
        update_oilfilm_thickness: False
    # input:
    #     [[spill]]
    #         oil_type = option(%s, default=%s)
    #         droplet_diameter_min_subsea = float(min=1e-8, max=1, default=0.0005)
    #         droplet_diameter_max_subsea = float(min=1e-8, max=1, default=0.005)
    wave_entrainment:
        droplet_size_distribution: 'Johansen et al. (2015)' #= option('Exponential', 'Johansen et al. (2015)', 'Li et al. (2017)', default='Johansen et al. (2015)')
        entrainment_rate: 'Li et al. (2017)' #= option('Tkalich & Chan (2002)', 'Li et al. (2017)', default='Li et al. (2017)')
    turbulentmixing:
        timestep: 5 #= float(min=0.1, max=3600, default=60.)
        verticalresolution: 1. #= float(min=0.01, max=10, default = 1.)
        diffusivitymodel: 'environment' #= option('environment', 'stepfunction', 'windspeed_Sundby1983', 'windspeed_Large1994', 'gls_tke', default='environment')
        TSprofiles: False #= boolean(default=False)
        droplet_diameter_min_wavebreaking: 1e-5 #= float(default=1e-5, min=1e-8, max=1)
        droplet_diameter_max_wavebreaking: 2e-3 #= float(default=2e-3, min=1e-8, max=1)
        droplet_size_exponent: 0 #= float(default=0, min=-10, max=10)

# post-processing
post_process:
    show_anim:  False
    save_anim:  False
    show_plot:  True
    save_plot:  False
    show_oil_budget: True
    save_oil_budget: False
    # more to come